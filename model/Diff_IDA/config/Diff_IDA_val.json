{
    "name": "Diff-IDA-val",
    "phase": "val", // not use in infer
    "gpu_ids": [
        0
    ],
    "path": {
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        "resume_state":  "weights/best"  //model/Diff_IDA/weights/best for integration test
    },
    "datasets": {
        "train": {
            "name": "Diff_IDA_train",
            "dataroot": "dataset/LOL_IDA_data/train",
            "batch_size": 16,
            "num_workers": 16,
            "use_shuffle": true,
            "data_len": -1
        },
        "val": {
            "name": "Diff_IDA_test",
            "dataroot": "dataset/LOL_IDA_data/eval",
            "data_len": -1
        }
    },
    "model": {
        "which_model_G": "sr3", 	// use the ddpm or sr3 network structure
        "finetune_norm": false,
        "unet": {
            "in_channel": 2,
            "out_channel": 1,
            "inner_channel": 32,
            "channel_multiplier": [1, 2, 2, 4],
            "attn_res": [16],
            "res_blocks": 2,
            "dropout": 0.1
        },
        "unet_fn": {
            "in_channel": 2,
            "out_channel": 1,
            "inner_channel": 32,
            "channel_multiplier": [1, 2, 2, 4],
            "attn_res": [16],
            "res_blocks": 2,
            "dropout": 0.1
        },
        "beta_schedule": {
            "train": {
                "schedule": "linear",
                "n_timestep": 1000,
                "linear_start": 1e-6,
                "linear_end": 2e-2
            },
            "val": {
                "schedule": "linear",
                "n_timestep": 1000,
                "linear_start": 1e-6,
                "linear_end": 2e-2
            }
        },
        "diffusion": {
            "image_size": 128,
            "channels": 3,
            "conditional": true
        }
    },
    "train": {
        "n_iter": 1000000,
        "val_freq": 5000,
        "save_checkpoint_freq": 1e4,
        "print_freq": 100,
        "optimizer": {
            "type": "adam",
            "lr": 1e-4
        }
    }
}